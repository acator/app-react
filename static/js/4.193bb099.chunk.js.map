{"version":3,"sources":["components/HOC/withAuthRedirect.js","components/profile/published_post/publishedPost.jsx","components/profile/profileStatus/profileStatusWithHoock.jsx","components/profile/profileInfo/profileface.js","components/profile/createPost/createPost.js","components/profile/profile_component.jsx","components/profile/profileConteiner.jsx"],"names":["dialogsMapForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","PublishedPost","className","alt","src","message","like","dislike","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","type","ProfileFace","edit","showEdit","ourPhoto","setOurPhoto","id","profile","photos","large","userPhoto","fullName","onClick","isOur","target","files","length","savePhoto","icon","height","CreatePost","newPost","setPostText","name","addPost","Profile","array","postDate","map","post","unshift","createPostDAte","post1","ProfileAPIContainer","componentDidMount","refresh","componentDidUpdate","match","params","userId","getStatus","getProfile","saveProfile","ComposeProfile","compose","postPage","newPostText","setUserProfile","withRouter"],"mappings":"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","file":"static/js/4.193bb099.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nlet dialogsMapForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n export const withAuthRedirect  = (Component) => {\n    class RedirectComponent extends React.Component{\n        render(){\n            if (this.props.isAuth === false) return <Redirect to={\"/login\"} />\n\n            return <Component {...this.props} />\n        }\n    }\n     let HeightOrderComponent = connect(dialogsMapForRedirect)(RedirectComponent)\n\n     return HeightOrderComponent\n}\n","\nimport React from 'react';\nconst PublishedPost = (props) => {\n    return(\n        <div className=\"publ_posts\">\n        <div className=\"user_photo\"><img alt=\"users\" src=\"http://chundra.ru/uploads/posts/2009-07/sean-crane-46.jpg\"/></div>\n        <div className=\"block_post\">\n          <div className =\"user_name\">Олег Олегович</div>\n          <hr/>\n          <div className=\"user_text\">{props.message}</div>\n          <div className = \"box_like_dis\">\n        <div className=\"like\">Like {props.like}</div>\n        <div className = \"dislike\">DisLike {props.dislike}</div> \n        </div> \n        </div>\n       \n      </div>\n    )\n}\nexport default PublishedPost;","import React  from 'react'\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\n\nconst ProfileStatusWithHook  = (props) => {\n    let  [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n    useEffect(() =>{\n        setStatus(props.status)\n    }, [props.status])\n  \n    const activeEditMode = ( ) => {\n        setEditMode(true)\n    }\n    const diActiveEditMode = () =>{\n        setEditMode(false)\n        props.updateStatus(status)\n\n    }\n     const changeStatus = (e) => {\n     \n            setStatus (e.currentTarget.value)\n      \n\n    }\n\n\n      return   <>\n          {!editMode &&\n              <div><span onDoubleClick = {activeEditMode} >{props.status  !== \"\"||null ? props.status :\"Введите новый статус\"}</span></div>\n         }\n          {editMode &&\n        <div>\n              <input onChange={changeStatus} onBlur={diActiveEditMode} autoFocus = {true}  type=\"text\"  value = {status}/>\n        </div>\n    }\n        </>\n}\n\n\nexport default ProfileStatusWithHook;","import userPhoto from '../../../components/friends/photoFriends/userPhoto.png'\r\nimport ProfileStatusWithHook from '../profileStatus/profileStatusWithHoock';\r\nimport icon from \"./../iconeClose/close_icon-icons.com_48658.png\"\r\nimport { useState } from 'react';\r\n\r\nconst ProfileFace = (props) =>{\r\n    let [edit, showEdit] = useState(false)\r\n    let [ourPhoto, setOurPhoto] = useState(false)\r\n    let savePhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"person\">\r\n            <div id=\"userPhoto\" className=\"person_photo\" >\r\n                <img alt=\"profile\" src={props.profile.photos.large || userPhoto} />\r\n            </div>\r\n            <div className=\"person_info\">\r\n                <div className=\"size_font\"></div> <div className=\"Name padding \"><span className=\"info-person\">{props.profile.fullName}</span></div><br />\r\n            </div>\r\n            <div className=\"status\">\r\n                <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n            <button className=\"button_edit\" onClick={() => showEdit(true)}>Eddit Photo</button>\r\n            {edit &&\r\n\r\n                <div className='editPhotoContainer' >\r\n                    <div className=\"editPhoto\">\r\n                        <div className=\"choosePhoto\">{props.isOur &&\r\n                            <input id=\"file-upload-button\" type=\"file\" onChange={savePhoto}></input>\r\n                        }</div><button className=\"closeEdit\" onClick={() => showEdit(false)}><img alt=\"close\" src={icon} height=\"15px\" /></button>\r\n                        <div className=\"showPhoto\"><button onClick={() => setOurPhoto(true)} >Показать фото</button></div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {ourPhoto &&\r\n                <div className=\"modalForPhoto\">\r\n                    <img alt=\"large\" src={props.profile.photos.large || userPhoto} />\r\n                    <button onClick={() => setOurPhoto(false)} ><img alt=\"close\" src={icon} /></button>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileFace;","\r\n\r\nconst CreatePost = (props) => {\r\n    let onChange = (e) => {\r\n        props.setPostText(e.target.value)\r\n    }\r\n    let submitPost = () => {\r\n        props.addPost(props.newPost)\r\n    }\r\n    return (\r\n\r\n        <form className=\"form_post_send\" ><h2>Написать пост</h2>\r\n            <input value={props.newPost} onChange={onChange} name=\"postText\" type=\"text\" />\r\n            <input type=\"button\" value=\"Отправить\" onClick={submitPost} />\r\n        </form>\r\n    )\r\n}\r\nexport default CreatePost","import './profile.css';\nimport PublishedPost from './published_post/publishedPost';\nimport Loading from '../comman/loading/loading';\nimport React from 'react';\nimport ProfileFace from './profileInfo/profileface';\nimport CreatePost from './createPost/createPost';\n\n\n\nconst Profile = (props) => {\n  \n  let array = []\n  props.postDate.map(post => array.unshift(post))\n  let createPostDAte = array.map(post1 => (\n    <PublishedPost key = {post1.id}  message={post1.message} like={post1.like} dislike={post1.dislike} />\n  ))\n  \n  if (!props.profile) {\n    return <Loading />\n\n  } \n    return(\n        <div className =\"content\">\n           <div className = \"container_info\">\n      <ProfileFace {...props}/>\n       \n        </div>\n        <div className=\"my_posts\" >\n          < CreatePost addPost={props.addPost} setPostText={props.setPostText} newPost={props.newPost} />\n        </div>\n       \n            {createPostDAte}\n      \n        </div>\n    )\n  \n}\n\n\n\n\nexport default Profile;\n","import { connect } from \"react-redux\";\nimport Profile from \"./profile_component\";\nimport { addPost, setUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile, setPostText} from '../../Redux/postReducer';\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\n\nlet newPost = (state) =>{\n    return{\n        newPost:state.postPage.newPostText,\n        postDate: state.postPage.postDate,\n        profile:state.postPage.profile,\n        isAuth: state.auth.isAuth,\n        status: state.postPage.status,\n        userId: state.auth.userId,\n    }\n}\nclass ProfileAPIContainer extends React.Component{\n    refresh(){\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.userId\n        }\n        this.props.getStatus(userId)\n\n        this.props.getProfile(userId)\n    }\n    componentDidMount = () => {\n           this.refresh()\n    }\n    componentDidUpdate = (props, state) => {\n        if (this.props.match.params.userId !== props.match.params.userId ){\n            this.refresh()\n        }\n    }\n   \n\n   render(){\n    return (\n        <Profile saveProfile={this.props.saveProfile} savePhoto={this.savePhoto} setPostText={this.props.setPostText} isOur={!this.props.match.params.userId} {...this.props} profile={this.props.profile} \n            newPost={this.props.newPost} updateStatus = {this.props.updateStatus}  status ={this.props.status}/>\n\n    )\n   }\n}\nlet ComposeProfile = compose(connect(newPost, { setUserProfile, addPost, getProfile, getStatus, updateStatus, savePhoto, saveProfile, setPostText }), withRouter,\n    withAuthRedirect)(ProfileAPIContainer)\n\n\nexport default ComposeProfile;"],"sourceRoot":""}