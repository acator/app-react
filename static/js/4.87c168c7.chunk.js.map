{"version":3,"sources":["components/HOC/withAuthRedirect.js","components/profile/published_post/publishedPost.jsx","components/profile/profileStatusWithHoock.jsx","components/profile/profile_component.jsx","components/profile/profileConteiner.jsx"],"names":["dialogsMapForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","PublishedPost","className","alt","src","message","like","dislike","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","type","maxValue10","maxLength","CreateFormPost","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","validate","validateText","Profile","createPostDAte","postDate","map","post","profile","photos","large","fullName","onClick","swa","id","swa2","aboutMe","lookingForAJobDescription","swa3","swa4","contacts","facebook","website","vk","twitter","instagram","youtube","formData","addPost","postText","ProfileAPIContainer","componentDidMount","userId","match","params","getStatus","getProfile","event","document","querySelector","style","visibility","opacity","transition","ComposeProfile","compose","newPost","postPage","newPostText","setUserProfile","withRouter"],"mappings":"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","file":"static/js/4.87c168c7.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nlet dialogsMapForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n export const withAuthRedirect  = (Component) => {\n    class RedirectComponent extends React.Component{\n        render(){\n            if (this.props.isAuth === false) return <Redirect to={\"/login\"} />\n\n            return <Component {...this.props} />\n        }\n    }\n     let HeightOrderComponent = connect(dialogsMapForRedirect)(RedirectComponent)\n\n     return HeightOrderComponent\n}\n","\nimport React from 'react';\nconst PublishedPost = (props) => {\n    return(\n        <div className=\"publ_posts\">\n        <div className=\"user_photo\"><img alt=\"users\" src=\"http://chundra.ru/uploads/posts/2009-07/sean-crane-46.jpg\"/></div>\n        <div className=\"block_post\">\n          <div className =\"user_name\">Олег Олегович</div>\n          <hr/>\n          <div className=\"user_text\">{props.message}</div>\n          <div className = \"box_like_dis\">\n        <div className=\"like\">Like {props.like}</div>\n        <div className = \"dislike\">DisLike {props.dislike}</div> \n        </div> \n        </div>\n       \n      </div>\n    )\n}\nexport default PublishedPost;","import React  from 'react'\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\n\nconst ProfileStatusWithHook  = (props) => {\n    let  [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n    useEffect(() =>{\n        setStatus(props.status)\n    }, [props.status])\n  \n    const activeEditMode = ( ) => {\n        setEditMode(true)\n    }\n    const diActiveEditMode = () =>{\n        setEditMode(false)\n        props.updateStatus(status)\n\n    }\n     const changeStatus = (e) => {\n     \n            setStatus (e.currentTarget.value)\n      \n\n    }\n\n\n      return   <>\n          {!editMode &&\n              <div><span onDoubleClick = {activeEditMode} >{props.status  !== \"\"||null ? props.status :\"Введите новый статус\"}</span></div>\n         }\n          {editMode &&\n        <div>\n              <input onChange={changeStatus} onBlur={diActiveEditMode} autoFocus = {true}  type=\"text\"  value = {status}/>\n        </div>\n    }\n        </>\n}\n\n\nexport default ProfileStatusWithHook;","import './profile.css';\nimport PublishedPost from './published_post/publishedPost';\nimport userPhoto from '../friends/photoFriends/userPhoto.png'\nimport Loading from '../comman/loading/loading';\nimport { maxLength, validateText } from '../utilits/validator/validator'\nimport React from 'react';\nimport { reduxForm, Field} from 'redux-form';\nimport { TextArea } from '../comman/loading/Control/formsControl';\nimport ProfileStatusWithHook from './profileStatusWithHoock';\n\n\nconst Profile = (props) => {\n\n  \n  let createPostDAte = props.postDate.map(post => (\n    <PublishedPost message={post.message} like={post.like} dislike={post.dislike} />\n  ))\n  \n \n  if (!props.profile) {\n    return <Loading />\n\n  } \n  let submitPost = (formData) => {\n    props.addPost(formData.postText)\n\n  }\n\n    return(\n     \n        <div className =\"content\">\n          \n       \n           <div className = \"container_info\">\n\n        <div className=\"person\">\n            <div className=\"status\">\n              <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus}  />\n            </div>\n\n            <div className=\"person_photo\"><img alt=\"profile\" src={props.profile.photos.large = ! null ? props.profile.photos.large : userPhoto}/></div>\n          <div className=\"person_info\">\n              <div className=\"size_font\"></div> <div className=\"Name padding \"><span className=\"info-person\">{props.profile.fullName}</span></div><br />\n                     </div>\n        </div>\n          \n\n          <div className=\"mini_nav\">\n\n            <div className=\"link_info\" onClick={props.swa } id= \"link_info\">Обо мне</div>\n            \n            <div id=\"overlay\">\n              <div className=\"popup\">\n                <button className=\"close\" onClick={props.swa2} >Закрыть</button>\n\n                <div><span>lookingForAJob: </span>{props.profile.aboutMe}<span></span></div>\n                <div><span>lookingForAJob: </span>{props.profile.lookingForAJobDescription}<span></span></div>\n                <div><span>fullName: </span><span>{props.profile.fullName}</span></div>\n                <div><span>Статус: </span><span>Не указан</span></div>\n                <div><span>Город: </span><span>Не указан</span></div>\n                <div><span>Страна: </span><span> Не указан</span></div>\n                <div><span>Образование: </span><span>Не указан</span></div>\n\n              </div>\n            </div>\n            <div className=\"link_info\" onClick={props.swa3}>Контакты</div>\n            <div id = \"contact\">\n                <div className = \"contactContainer\">\n                <button className=\"close\" onClick={props.swa4} >Закрыть</button>\n                <div><span>facebook: </span>{props.profile.contacts.facebook != null ? props.profile.contacts.facebook : \"Не указан\"}<span></span></div>\n                <div><span>website: </span><span>{props.profile.contacts.website != null ? props.profile.contacts.website : \"Не указан\"}</span></div>\n                <div><span>vk: </span><span>{props.profile.contacts.vk != null ? props.profile.contacts.vk : \"Не указан\"}</span></div>\n                <div><span>twitter: </span><span>{props.profile.contacts.twitter != null ? props.profile.contacts.twitter : \"Не указан\"}</span></div>\n                <div><span>instagram: </span><span>{props.profile.contacts.instagram != null ? props.profile.contacts.instagram : \"Не указан\"}</span></div>\n                <div><span>youtube: </span><span>{props.profile.contacts.youtube != null ? props.profile.contacts.youtube : \"Не указан\"}</span></div>\n                </div>\n            </div>\n            <div className=\"link_info\">Друзья</div>\n          </div>\n        </div>\n        <div className=\"my_posts\" >\n        < CreateFormPost onSubmit={submitPost} />\n        </div>\n            {createPostDAte}\n </div>\n  \n    )\n  \n}\nlet maxValue10 = maxLength(10)\nconst CreatePost = (props) =>{\n  \n  return(\n  \n    <form className=\"form_post_send\" onSubmit={props.handleSubmit} >\n      <Field component={TextArea} name={\"postText\"} validate={[validateText, maxValue10]}/>\n      <input type=\"submit\" value=\"Отправить\"  />\n    </form>\n  )\n}\nlet CreateFormPost = reduxForm({ form: 'post' })(CreatePost)\nexport default Profile;\n","import { connect } from \"react-redux\";\nimport Profile from \"./profile_component\";\nimport { addPost,setUserProfile, getProfile, getStatus, updateStatus} from '../../Redux/postReducer';\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\n\nlet newPost = (state) =>{\n    return{\n        newPost:state.postPage.newPostText,\n        postDate: state.postPage.postDate,\n        profile:state.postPage.profile,\n        isAuth: state.auth.isAuth,\n        status: state.postPage.status,\n        userId: state.auth.userId\n\n    }\n}\nclass ProfileAPIContainer extends React.Component{\n    \n    componentDidMount = () => {\n            let userId = this.props.match.params.userId\n            if(!userId){\n                userId = this.props.userId\n            }\n        this.props.getStatus(userId)\n\n        this.props.getProfile(userId)\n    }\n    \n    swa() {\n        let event = document.querySelector('#overlay')\n        event.style.visibility = 'visible';\n\n        event.style.opacity = '1';\n        event.style.transition = 'all 0.7s ease-out 0s'\n    }\n    swa2() {\n        let event = document.querySelector('#overlay')\n        event.style.visibility = 'hidden';\n        event.style.opacity = '0'\n    }\n    swa3() {\n        let event = document.querySelector('#contact')\n        event.style.visibility = 'visible';\n\n        event.style.opacity = '1';\n        event.style.transition = 'all 0.7s ease-out 0s'\n    }\n    swa4() {\n        let event = document.querySelector('#contact')\n        event.style.visibility = 'hidden';\n        event.style.opacity = '0'\n    }\n\n   render(){\n\n    return (\n        <Profile  {...this.props} profile={this.props.profile} swa={this.swa} swa2={this.swa2}\n            swa3={this.swa3} swa4={this.swa4} updateStatus = {this.props.updateStatus} status ={this.props.status}/>\n\n    )\n   }\n}\nlet ComposeProfile = compose(connect(newPost, { setUserProfile,  addPost, getProfile, getStatus, updateStatus }), withRouter,\n    withAuthRedirect)(ProfileAPIContainer)\n\n\nexport default ComposeProfile;"],"sourceRoot":""}