{"version":3,"sources":["components/HOC/withAuthRedirect.js","components/dialogs/icon_friend_dialog/icon_friend_dialog.jsx","components/dialogs/messages/messages.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogsConteiner.jsx"],"names":["dialogsMapForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","IconFriend","className","onClick","setHidePeople","alt","src","id","name","Message","message","CreateMessage","onChange","e","setMessageText","target","value","newMessageText","type","addMessageCreateAction","Dialogs","useState","hidePeople","dialogsIconElement","dialogsIcon","map","people","names","messageElement","messageIcon","DialogsContainer","ComposeDialogs","compose","messagePage","newMessagePeople"],"mappings":"sOAGIA,EAAwB,SAACC,GACzB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAGbE,EAAoB,SAACC,GAAe,IACxCC,EADuC,4JAEzC,WACI,OAA0B,IAAtBC,KAAKC,MAAMN,OAAyB,cAAC,IAAD,CAAUO,GAAI,WAE/C,cAACJ,EAAD,eAAeE,KAAKC,YALU,GACbE,IAAML,WASrC,OAF2BM,kBAAQX,EAARW,CAA+BL,K,wICJhDM,EATI,SAACJ,GAChB,OACI,sBAAKK,UAAU,SAASC,QAASN,EAAMO,cAAvC,UACA,qBAAKF,UAAW,eAAhB,SAA+B,qBAAKG,IAAM,MAAKC,IAAM,wEACrD,qBAAKJ,UAAY,cAAjB,SAA+B,cAAC,IAAD,CAAUJ,GAAM,YAAcD,EAAMU,GAApC,SAAyCV,EAAMW,aCKvEC,EAVC,SAACZ,GAEb,OACI,sBAAKK,UAAY,cAAjB,UACoB,qBAAKA,UAAW,eAAhB,SAA+B,qBAAKG,IAAM,SAASC,IAAK,gEACxD,qBAAKJ,UAAY,UAAjB,SAA4BL,EAAMW,OAClC,qBAAKN,UAAY,SAAjB,SAA2BL,EAAMa,c,yBCFhDC,EAAgB,SAACd,GAO1B,OACI,uBAAMK,UAAU,cAAhB,UAEI,0BAAUU,SATH,SAACC,GACZhB,EAAMiB,eAAeD,EAAEE,OAAOC,QAQKR,KAAK,cAAcQ,MAAQnB,EAAMoB,iBAChE,uBAAOC,KAAK,SAASF,MAAM,MAAMb,QAPrB,WAChBN,EAAMsB,uBAAuBtB,EAAMoB,uBA4D5BG,EAjDC,SAACvB,GACb,MAAkCwB,oBAAS,GAA3C,mBAAKC,EAAL,KAAiBlB,EAAjB,KACImB,EAAqB1B,EAAM2B,YAAYC,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAAYtB,cAAiB,kBAAKA,GAAc,IAAwBG,GAAImB,EAAOnB,GAAIC,KAAMkB,EAAOC,OAAvCD,EAAOnB,OACzHqB,EAAiB/B,EAAMgC,YAAYJ,KAAI,SAAAf,GAAO,OAAI,cAAC,EAAD,CAA4BA,QAASA,EAAQA,QAASH,GAAIG,EAAQH,GAAIC,KAAME,EAAQiB,OAApEjB,EAAQH,OAI9E,OACG,sBAAKL,UAAY,cAAjB,UACI,sBAAKA,UAAY,iBAAjB,UACK,yCAAiBoB,GACjB,wBAAQnB,QAAU,kBAAKC,GAAc,IAArC,sGAKJ,sBAAKF,UAAU,kBAAf,UACI,qBAAKA,UAAY,uBAAjB,SACaqB,KAGXD,GACE,qBAAKpB,UAAU,6BAAf,SAEKqB,IAIRD,GACD,sBAAKpB,UAAY,qBAAjB,UACA,qBAAKA,UAAW,uBAAhB,SAEY0B,IAMR,cAAE,EAAF,CAAgBX,eAAgBpB,EAAMoB,eAAgBE,uBAAwBtB,EAAMsB,uBAChFL,eAAgBjB,EAAMiB,2B,0BC3CxCgB,E,4JACF,WAEI,OACI,cAAC,EAAD,2BAAalC,KAAKC,OAAlB,IAA0B2B,YAAa5B,KAAKC,MAAM2B,YAC9CK,YAAajC,KAAKC,MAAMgC,YAAaV,uBAAwBvB,KAAKC,MAAMsB,uBACxEL,eAAgBlB,KAAKC,MAAMiB,sB,GANZf,IAAML,WAWjCqC,EAAiBC,kBAAQhC,mBArBZ,SAACV,GACd,MAAO,CAEHkC,YAAalC,EAAM2C,YAAYT,YAC/BU,iBAAkB5C,EAAM2C,YAAYC,iBACpCL,YAAavC,EAAM2C,YAAYJ,YAC/BtC,OAAQD,EAAME,KAAKD,OACnB0B,eAAgB3B,EAAM2C,YAAYhB,kBAcM,CAAEE,2BAAwBL,qBAAkBrB,IAAvEuC,CAAyFF,GAG/FC","file":"static/js/3.e63a0d0e.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nlet dialogsMapForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n export const withAuthRedirect  = (Component) => {\n    class RedirectComponent extends React.Component{\n        render(){\n            if (this.props.isAuth === false) return <Redirect to={\"/login\"} />\n\n            return <Component {...this.props} />\n        }\n    }\n     let HeightOrderComponent = connect(dialogsMapForRedirect)(RedirectComponent)\n\n     return HeightOrderComponent\n}\n","import { NavLink } from \"react-router-dom\"\n/*import React, { Component } from 'react';*/\n\nconst IconFriend = (props) => {\n    return(\n        <div className=\"friend\" onClick={props.setHidePeople}>\n        <div className =\"friend_photo\"><img alt = \"alt\"src = \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-vk-cats-24.jpg\"/></div>\n        <div className = \"friend_name\"><NavLink  to = {\"/dialogs/\" + props.id}>{props.name}</NavLink></div>\n    </div>\n    )\n}\n\nexport default IconFriend;","\n/*import React, { Component } from 'react';*/\nconst Message = (props) => {\n   \n    return (\n        <div className = \"our_message\">\n                            <div className =\"message_icon\"><img alt = \"person\" src =\"http://chundra.ru/uploads/posts/2009-07/sean-crane-46.jpg\"/></div>\n                            <div className = \"pronoun\">{props.name}</div>\n                            <div className = \"answer\">{props.message}</div>\n            </div>\n    )\n}\nexport default Message;","import IconFriend from './icon_friend_dialog/icon_friend_dialog';\nimport Message from './messages/messages';\nimport './dialogs.css';\nimport React from 'react';\nimport { useState } from 'react';\n\nexport const CreateMessage = (props) => {\n    let onChange = (e) => {\n        props.setMessageText(e.target.value)\n    }\n    let submitMessage = () => {\n        props.addMessageCreateAction(props.newMessageText)\n    }\n    return (\n        <form className=\"submit_text\"  >\n           \n            <textarea onChange ={onChange} name=\"textMessage\" value ={props.newMessageText}/>\n            <input type=\"button\" value=\" > \" onClick={submitMessage} />\n        </form>\n    )\n}\n\nconst Dialogs = (props) => {\n    let [hidePeople, setHidePeople] = useState(true)\n    let dialogsIconElement = props.dialogsIcon.map(people => <IconFriend setHidePeople = {() =>setHidePeople(true)} key ={people.id} id={people.id} name={people.names} />)\n    let messageElement = props.messageIcon.map(message => <Message key = {message.id} message={message.message} id={message.id} name={message.names} />)\n  \n  \n   \n    return (\n       <div className = \"all_dialogs\">\n           <div className = \"header_dialogs\">\n                <h1>Dialogs</h1>{hidePeople &&\n                <button onClick ={()=> setHidePeople(false)}>Списки диалогов</button>\n              }\n            </div> \n           \n\n            <div className=\"content_dialogs\">\n                <div className = \"list_dialogs_friends\">\n                           { dialogsIconElement}\n                </div>\n                \n                {!hidePeople &&\n                    <div className=\"list_dialogs_friends_clone\">\n\n                        {dialogsIconElement}\n\n                    </div>\n                }\n                {hidePeople &&\n                <div className = \"dialogsWithFriends\"> \n                <div className =\"dialogs_withSomebody\" >\n                    \n                           {messageElement }\n                   \n                   \n                  \n                </div>\n\n                    < CreateMessage newMessageText={props.newMessageText} addMessageCreateAction={props.addMessageCreateAction}\n                        setMessageText={props.setMessageText} />\n               </div>\n              }\n           </div>\n           \n\n       </div>\n    );\n}\n\nexport default Dialogs;\n\n","import { connect } from \"react-redux\";\nimport Dialogs from \"./dialogs\";\nimport { addMessageCreateAction, setMessageText} from '../../Redux/messageReduce';\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport React from \"react\";\n\n\nlet dialogsMap = (state) =>{\n    return {\n        \n        dialogsIcon: state.messagePage.dialogsIcon,\n        newMessagePeople: state.messagePage.newMessagePeople,\n        messageIcon: state.messagePage.messageIcon,\n        isAuth: state.auth.isAuth,\n        newMessageText: state.messagePage.newMessageText\n    }\n}\nclass DialogsContainer extends React.Component{\n    render(){\n\n        return(\n            <Dialogs {...this.props}  dialogsIcon={this.props.dialogsIcon}\n                messageIcon={this.props.messageIcon} addMessageCreateAction={this.props.addMessageCreateAction}\n                setMessageText={this.props.setMessageText}/>\n        )\n    }\n}\n\nlet ComposeDialogs = compose(connect(dialogsMap,{ addMessageCreateAction, setMessageText}), withAuthRedirect)(DialogsContainer)\n\n\nexport default ComposeDialogs;"],"sourceRoot":""}